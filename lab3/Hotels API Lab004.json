{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0",
    "title": "Hotels API Laravel",
    "description": "Lab004 PAB"
  },
  "servers": [
    {
      "description": "Laravel",
      "url": "http://localhost:8000/api"
    }
  ],
  "paths": {
    "/hotels/{hotelId}/rooms/{roomId}": {
      "delete": {
        "tags": [
          "rooms"
        ],
        "summary": "delete room from hotel",
        "parameters": [
          {
            "$ref": "#/components/parameters/hotelId"
          },
          {
            "$ref": "#/components/parameters/roomId"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResource"
                }
              }
            }
          },
          "404": {
            "description": "hotel or room not found"
          }
        }
      },
      "get": {
        "tags": [
          "rooms"
        ],
        "summary": "Returns a specific room of a given hotel",
        "operationId": "getRoomById",
        "parameters": [
          {
            "$ref": "#/components/parameters/hotelId"
          },
          {
            "$ref": "#/components/parameters/roomId"
          }
        ],
        "responses": {
          "200": {
            "description": "Room details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResource"
                }
              }
            }
          },
          "404": {
            "description": "Hotel or room not found"
          }
        }
      },
      "put": {
        "tags": [
          "rooms"
        ],
        "summary": "updated room in hotel",
        "parameters": [
          {
            "$ref": "#/components/parameters/hotelId"
          },
          {
            "$ref": "#/components/parameters/roomId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResource"
                }
              }
            }
          },
          "404": {
            "description": "hotel not found"
          }
        }
      }
    },
    "/hotels": {
      "get": {
        "tags": [
          "hotels"
        ],
        "summary": "Returns all hotels",
        "responses": {
          "200": {
            "description": "A list of hotels.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelCollection"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "hotels"
        ],
        "summary": "Stores a new hotel",
        "operationId": "storeHotel",
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelResource"
                }
              }
            }
          },
          "422": {
            "description": "unprocessable content"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreHotelRequest"
              }
            }
          },
          "description": "new hotel data",
          "required": true
        }
      }
    },
    "/hotels/{hotelId}/rooms": {
      "get": {
        "tags": [
          "rooms"
        ],
        "summary": "Returns all rooms of the hotel",
        "operationId": "getHotelRooms",
        "responses": {
          "200": {
            "description": "returns all rooms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomCollection"
                }
              }
            }
          },
          "404": {
            "description": "hotel not found"
          }
        }
      },
      "post": {
        "tags": [
          "rooms"
        ],
        "summary": "creates new room in hotel",
        "operationId": "createRoom",
        "parameters": [
          {
            "$ref": "#/components/parameters/hotelId"
          }
        ],
        "requestBody": {
          "description": "new room",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StoreRoomRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new room created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomResource"
                }
              }
            }
          },
          "404": {
            "description": "hote not found"
          },
          "422": {
            "description": "unprocessable content"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/hotelId"
        }
      ]
    },
    "/hotels/{hotelId}": {
      "get": {
        "tags": [
          "hotels"
        ],
        "summary": "Returns a hotel based on ID",
        "operationId": "getHotelById",
        "responses": {
          "200": {
            "description": "hotel response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelResource"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "put": {
        "tags": [
          "hotels"
        ],
        "summary": "Updates an existing hotel",
        "operationId": "updateHotel",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HotelResource"
                }
              }
            }
          },
          "404": {
            "description": "not found"
          },
          "422": {
            "description": "unprocessable content"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHotelRequest"
              }
            }
          },
          "description": "updated hotel data",
          "required": true
        }
      },
      "delete": {
        "tags": [
          "hotels"
        ],
        "summary": "Deletes a hotel",
        "operationId": "deleteHotel",
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/components/parameters/hotelId"
        }
      ]
    }
  },
  "components": {
    "parameters": {
      "roomId": {
        "name": "roomId",
        "in": "path",
        "description": "ID of the room",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "hotelId": {
        "name": "hotelId",
        "in": "path",
        "description": "ID of hotel to use",
        "required": true,
        "schema": {
          "type": "integer"
        }
      }
    },
    "schemas": {
      "Hotel": {
        "type": "object",
        "required": [
          "name",
          "stars",
          "city"
        ],
        "properties": {
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "example": "Ibis Centrum"
          },
          "stars": {
            "type": "integer",
            "format": "int32",
            "minimum": 0,
            "maximum": 5,
            "example": 3
          },
          "city": {
            "type": "string",
            "example": "Łódź"
          }
        }
      },
      "HotelResource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Hotel"
          },
          {
            "type": "object"
          }
        ]
      },
      "HotelCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HotelResource"
            }
          }
        }
      },
      "StoreHotelRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Hotel"
          },
          {
            "type": "object"
          }
        ]
      },
      "UpdateHotelRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Hotel"
          },
          {
            "type": "object"
          }
        ]
      },
      "Room": {
        "type": "object",
        "required": [
          "number",
          "occupancy",
          "price"
        ],
        "properties": {
          "number": {
            "type": "integer",
            "minimum": 1,
            "maximum": 999,
            "example": 333
          },
          "name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 30,
            "example": "Double"
          },
          "occupancy": {
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "maximum": 4,
            "example": 2
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "example": 234.5
          }
        }
      },
      "RoomResource": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "example": 1
          }
        },
        "allOf": [
          {
            "$ref": "#/components/schemas/Room"
          },
          {
            "type": "object"
          }
        ]
      },
      "RoomCollection": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoomResource"
            }
          }
        }
      },
      "StoreRoomRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Room"
          },
          {
            "type": "object"
          }
        ]
      },
      "UpdateRoomRequest": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Room"
          },
          {
            "type": "object"
          }
        ]
      }
    }
  }
}