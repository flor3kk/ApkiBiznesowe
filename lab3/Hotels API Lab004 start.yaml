openapi: 3.0.3
info:
  version: '1.0'
  title: 'Hotels API Laravel'
  description: 'Lab004 PAB'
servers:
  - description: 'Laravel'
    url: 'http://localhost:8000/api'
paths:
  /hotels:
    get:
      tags:
        - hotels
      summary: Returns all hotels
      responses:
        '200':
          description: A list of hotels.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelCollection'
    post:
      tags:
        - hotels
      summary: Stores a new hotel
      operationId: storeHotel
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelResource'
        '422':
          description: unprocessable content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreHotelRequest'
        description: new hotel data
        required: true   
  /hotels/{hotelId}:
    get:
      tags:
        - hotels
      summary: Returns a hotel based on ID
      operationId: getHotelById
      responses:
        '200':
          description: hotel response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelResource'
        '404':
          description: 'not found'
    put:
      tags:
        - hotels
      summary: Updates an existing hotel
      operationId: updateHotel
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HotelResource'
        '404':
          description: not found
        '422':
          description: unprocessable content
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateHotelRequest'
        description: updated hotel data
        required: true 
    delete:
      tags:
        - hotels
      summary: Deletes a hotel
      operationId: deleteHotel
      responses:
        '204':
          description: successful operation
        '404':
          description: not found
    parameters:
      - $ref: '#/components/parameters/hotelId'  
components:  
  parameters:
    hotelId:
      name: hotelId
      in: path
      description: ID of hotel to use
      required: true
      schema:
        type: integer  
  schemas:
    Hotel:
      type: object
      required:
        - name
        - stars
        - city
      properties:
        name:
          type: string
          minLength: 2
          maxLength: 30
          example: Ibis Centrum 
        stars:
          type: integer
          format: int32
          minimum: 0
          maximum: 5
          example: 3
        city:
          type: string
          example: Łódź
    HotelResource:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: '#/components/schemas/Hotel'
        - type: object
    HotelCollection:
      type: object  
      properties:
        data:
          type: array
          items:
           $ref: '#/components/schemas/HotelResource'        
    StoreHotelRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Hotel'
        - type: object
    UpdateHotelRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Hotel'
        - type: object
    Room:
      type: object
      required:
        - number
        - occupancy 
        - price
      properties:
        number:
          type: integer
          minimum: 1
          maximum: 999
          example: 333
        name:
          type: string
          minLength: 2
          maxLength: 30
          example: Double
        occupancy:
          type: integer
          format: int32
          minimum: 1
          maximum: 4
          example: 2
        price:
          type: number
          minimum: 0.0
          example: 234.50    
    RoomResource:
      required:
        - id
      properties:
        id:
          type: integer
          format: int32
          example: 1
      allOf:
        - $ref: '#/components/schemas/Room'
        - type: object
    RoomCollection:
      type: object  
      properties:
        data:
          type: array
          items:
           $ref: '#/components/schemas/RoomResource'      
    StoreRoomRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Room'
        - type: object
    UpdateRoomRequest:
      type: object 
      allOf:
        - $ref: '#/components/schemas/Room'
        - type: object